{"ast":null,"code":"var _jsxFileName = \"/Users/mike/ReactApps/ui/src/components/form.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport blue from '@material-ui/core/colors/blue';\nimport Grid from '@material-ui/core/Grid';\nimport { Typography } from '../../node_modules/@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport AddIcon from '@material-ui/icons/Add';\n\nvar styles = function styles(theme) {\n  return {\n    button: {\n      margin: theme.spacing.unit\n    },\n    extendedIcon: {\n      marginRight: theme.spacing.unit\n    },\n    container: {\n      display: 'flex',\n      flexWrap: 'wrap'\n    },\n    margin: {\n      margin: theme.spacing.unit\n    },\n    cssLabel: {\n      '&$cssFocused': {\n        color: blue[500]\n      }\n    },\n    cssFocused: {},\n    cssUnderline: {\n      '&:after': {\n        borderBottomColor: blue[500]\n      }\n    },\n    cssOutlinedInput: {\n      '&$cssFocused $notchedOutline': {\n        borderColor: blue[500]\n      }\n    },\n    notchedOutline: {},\n    bootstrapRoot: {\n      'label + &': {\n        marginTop: theme.spacing.unit * 3\n      }\n    },\n    bootstrapInput: {\n      borderRadius: 4,\n      backgroundColor: theme.palette.common.white,\n      border: '1px solid #ced4da',\n      fontSize: 16,\n      padding: '10px 12px',\n      transition: theme.transitions.create(['border-color', 'box-shadow']),\n      // Use the system font instead of the default Roboto font.\n      fontFamily: ['-apple-system', 'BlinkMacSystemFont', '\"Segoe UI\"', 'Roboto', '\"Helvetica Neue\"', 'Arial', 'sans-serif', '\"Apple Color Emoji\"', '\"Segoe UI Emoji\"', '\"Segoe UI Symbol\"'].join(','),\n      '&:focus': {\n        borderColor: '#80bdff',\n        boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)'\n      }\n    },\n    bootstrapFormLabel: {\n      fontSize: 18\n    }\n  };\n};\n\nfunction CustomizedInputs(props) {\n  var classes = props.classes;\n  return React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"headline\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"New Task\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    className: classes.margin,\n    InputLabelProps: {\n      classes: {\n        root: classes.cssLabel,\n        focused: classes.cssFocused\n      }\n    },\n    InputProps: {\n      classes: {\n        root: classes.cssOutlinedInput,\n        focused: classes.cssFocused,\n        notchedOutline: classes.notchedOutline\n      }\n    },\n    label: \"Task\",\n    variant: \"outlined\",\n    id: props.task,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    className: classes.margin,\n    InputLabelProps: {\n      classes: {\n        root: classes.cssLabel,\n        focused: classes.cssFocused\n      }\n    },\n    InputProps: {\n      classes: {\n        root: classes.cssOutlinedInput,\n        focused: classes.cssFocused,\n        notchedOutline: classes.notchedOutline\n      }\n    },\n    label: \"Description\",\n    variant: \"outlined\",\n    id: \"description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    className: classes.margin,\n    InputLabelProps: {\n      classes: {\n        root: classes.cssLabel,\n        focused: classes.cssFocused\n      }\n    },\n    InputProps: {\n      classes: {\n        root: classes.cssOutlinedInput,\n        focused: classes.cssFocused,\n        notchedOutline: classes.notchedOutline\n      }\n    },\n    label: \"Assigned To\",\n    variant: \"outlined\",\n    id: \"Assigned To\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    className: classes.margin,\n    InputLabelProps: {\n      classes: {\n        root: classes.cssLabel,\n        focused: classes.cssFocused\n      }\n    },\n    InputProps: {\n      classes: {\n        root: classes.cssOutlinedInput,\n        focused: classes.cssFocused,\n        notchedOutline: classes.notchedOutline\n      }\n    },\n    label: \"Date Assigned\",\n    variant: \"outlined\",\n    id: \"Date Assigned\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    className: classes.margin,\n    InputLabelProps: {\n      classes: {\n        root: classes.cssLabel,\n        focused: classes.cssFocused\n      }\n    },\n    InputProps: {\n      classes: {\n        root: classes.cssOutlinedInput,\n        focused: classes.cssFocused,\n        notchedOutline: classes.notchedOutline\n      }\n    },\n    label: \"Completed\",\n    variant: \"outlined\",\n    id: \"completed\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }), React.createElement(Button, {\n    variant: \"fab\",\n    color: \"primary\",\n    \"aria-label\": \"Add\",\n    className: classes.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }, React.createElement(AddIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  })))));\n}\n\nCustomizedInputs.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(CustomizedInputs);","map":{"version":3,"sources":["/Users/mike/ReactApps/ui/src/components/form.js"],"names":["React","PropTypes","withStyles","Paper","TextField","blue","Grid","Typography","Button","AddIcon","styles","theme","button","margin","spacing","unit","extendedIcon","marginRight","container","display","flexWrap","cssLabel","color","cssFocused","cssUnderline","borderBottomColor","cssOutlinedInput","borderColor","notchedOutline","bootstrapRoot","marginTop","bootstrapInput","borderRadius","backgroundColor","palette","common","white","border","fontSize","padding","transition","transitions","create","fontFamily","join","boxShadow","bootstrapFormLabel","CustomizedInputs","props","classes","root","focused","task","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport blue from '@material-ui/core/colors/blue';\nimport Grid from '@material-ui/core/Grid';\nimport { Typography } from '../../node_modules/@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport AddIcon from '@material-ui/icons/Add';\n\n\n\n\nconst styles = theme => ({\n    button: {\n        margin: theme.spacing.unit,\n    },\n    extendedIcon: {\n        marginRight: theme.spacing.unit,\n    },\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    margin: {\n        margin: theme.spacing.unit,\n    },\n    cssLabel: {\n        '&$cssFocused': {\n            color: blue[500],\n        },\n    },\n    cssFocused: {},\n    cssUnderline: {\n        '&:after': {\n            borderBottomColor: blue[500],\n        },\n    },\n    cssOutlinedInput: {\n        '&$cssFocused $notchedOutline': {\n            borderColor: blue[500],\n        },\n    },\n    notchedOutline: {},\n    bootstrapRoot: {\n        'label + &': {\n            marginTop: theme.spacing.unit * 3,\n        },\n    },\n    bootstrapInput: {\n        borderRadius: 4,\n        backgroundColor: theme.palette.common.white,\n        border: '1px solid #ced4da',\n        fontSize: 16,\n        padding: '10px 12px',\n        transition: theme.transitions.create(['border-color', 'box-shadow']),\n        // Use the system font instead of the default Roboto font.\n        fontFamily: [\n            '-apple-system',\n            'BlinkMacSystemFont',\n            '\"Segoe UI\"',\n            'Roboto',\n            '\"Helvetica Neue\"',\n            'Arial',\n            'sans-serif',\n            '\"Apple Color Emoji\"',\n            '\"Segoe UI Emoji\"',\n            '\"Segoe UI Symbol\"',\n        ].join(','),\n        '&:focus': {\n            borderColor: '#80bdff',\n            boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n        },\n    },\n    bootstrapFormLabel: {\n        fontSize: 18,\n    },\n});\n\n\nfunction CustomizedInputs(props) {\n    const { classes } = props;\n\n    return (\n        <Grid item xs={6}>\n            <Paper>\n                <Typography variant=\"headline\">\n                    New Task\n    </Typography>\n                <div>\n\n                    <TextField\n                        className={classes.margin}\n                        InputLabelProps={{\n                            classes: {\n                                root: classes.cssLabel,\n                                focused: classes.cssFocused,\n                            },\n                        }}\n                        InputProps={{\n                            classes: {\n                                root: classes.cssOutlinedInput,\n                                focused: classes.cssFocused,\n                                notchedOutline: classes.notchedOutline,\n                            },\n                        }}\n                        label=\"Task\"\n                        variant=\"outlined\"\n                        id= {props.task}\n                        \n                        \n                    />\n                    <TextField\n                        className={classes.margin}\n                        InputLabelProps={{\n                            classes: {\n                                root: classes.cssLabel,\n                                focused: classes.cssFocused,\n                            },\n                        }}\n                        InputProps={{\n                            classes: {\n                                root: classes.cssOutlinedInput,\n                                focused: classes.cssFocused,\n                                notchedOutline: classes.notchedOutline,\n                            },\n                        }}\n                        label=\"Description\"\n                        variant=\"outlined\"\n                        id=\"description\"\n                    />\n                    <TextField\n                        className={classes.margin}\n                        InputLabelProps={{\n                            classes: {\n                                root: classes.cssLabel,\n                                focused: classes.cssFocused,\n                            },\n                        }}\n                        InputProps={{\n                            classes: {\n                                root: classes.cssOutlinedInput,\n                                focused: classes.cssFocused,\n                                notchedOutline: classes.notchedOutline,\n                            },\n                        }}\n                        label=\"Assigned To\"\n                        variant=\"outlined\"\n                        id=\"Assigned To\"\n                    />\n                    <TextField\n                        className={classes.margin}\n                        InputLabelProps={{\n                            classes: {\n                                root: classes.cssLabel,\n                                focused: classes.cssFocused,\n                            },\n                        }}\n                        InputProps={{\n                            classes: {\n                                root: classes.cssOutlinedInput,\n                                focused: classes.cssFocused,\n                                notchedOutline: classes.notchedOutline,\n                            },\n                        }}\n                        label=\"Date Assigned\"\n                        variant=\"outlined\"\n                        id=\"Date Assigned\"\n                    />\n                    <TextField\n                        className={classes.margin}\n                        InputLabelProps={{\n                            classes: {\n                                root: classes.cssLabel,\n                                focused: classes.cssFocused,\n                            },\n                        }}\n                        InputProps={{\n                            classes: {\n                                root: classes.cssOutlinedInput,\n                                focused: classes.cssFocused,\n                                notchedOutline: classes.notchedOutline,\n                            },\n                        }}\n                        label=\"Completed\"\n                        variant=\"outlined\"\n                        id=\"completed\"\n                    />\n                    <Button variant=\"fab\" color=\"primary\" aria-label=\"Add\" className={classes.button}>\n                        <AddIcon />\n                    </Button>\n                </div>\n            </Paper>\n        </Grid>\n    );\n}\n\nCustomizedInputs.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(CustomizedInputs);\n"]},"metadata":{},"sourceType":"module"}